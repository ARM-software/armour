##################################################################################################
# Details service
##################################################################################################
apiVersion: v1
kind: Namespace
metadata:
  name: armour
---
apiVersion: v1
kind: Service
metadata:
  name: details
  namespace: armour
  labels:
    app: details
    service: details
spec:
  type: NodePort
  externalIPs:
    - 172.42.42.102
  ports:
  - port: 9080
    name: http
  - name: armour
    port: 32000
    nodePort: 32000
  selector:
    app: details
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-details
  namespace: armour
  labels:
    account: details
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: details-v1
  namespace: armour
  labels:
    app: details
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details
      version: v1
  template:
    metadata:
      labels:
        app: details
        version: v1
    spec:
      initContainers:
      - name: armour-init
        image: armour-init
        imagePullPolicy: Never
        tty: true
        command: ["/bin/bash", "./iptables.sh"]
        env:
          - name: INGRESS
            value: "6000"
          - name: EGRESS
            value: "6000"
          - name: APP
            value: "9080"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsUser: 0
      serviceAccountName: bookinfo-details
      containers:
      - name: armour
        image: armour-proxy
        imagePullPolicy: Never
        tty: true
        env:
          - name: ARMOUR_PASS
            value: password
        command: ["/bin/bash", "-c"]
        args: ["./script.sh details & ./armour-host --label details-host -c 172.42.42.101:8088 -u 172.42.42.102:32000 -p 32000 --run cp"]
        securityContext:
          runAsUser: 1337
        ports:
        - containerPort: 6000
        volumeMounts:
          - mountPath: /home/armour/certificates
            name: certificates
      - name: details
        image: docker.io/istio/examples-bookinfo-details-v1:1.16.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
      volumes:
      - name: certificates
        hostPath:
          path: /home/vagrant/bin/certificates
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  namespace: armour
  labels:
    app: ratings
    service: ratings
spec:
  type: NodePort
  externalIPs:
    - 172.42.42.102
  ports:
  - port: 9080
    name: http
  - name: armour
    port: 32001
    nodePort: 32001
  selector:
    app: ratings
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings
  namespace: armour
  labels:
    account: ratings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  namespace: armour
  labels:
    app: ratings
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: v1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
    spec:
      initContainers:
      - name: armour-init
        image: armour-init
        imagePullPolicy: Never
        tty: true
        command: ["/bin/bash", "./iptables.sh"]
        env:
          - name: INGRESS
            value: "6000"
          - name: EGRESS
            value: "6000"
          - name: APP
            value: "9080"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsUser: 0
      serviceAccountName: bookinfo-ratings
      containers:
      - name: armour
        image: armour-proxy
        imagePullPolicy: Never
        tty: true
        env:
          - name: ARMOUR_PASS
            value: password
        command: ["/bin/bash", "-c"]
        args: ["./script.sh ratings & ./armour-host --label ratings-host -c 172.42.42.101:8088 -u 172.42.42.102:32001 -p 32001 --run cp"]
        securityContext:
          runAsUser: 1337
        ports:
        - containerPort: 6000
        volumeMounts:
          - mountPath: /home/armour/certificates
            name: certificates
      - name: ratings
        image: docker.io/istio/examples-bookinfo-ratings-v1:1.16.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
      volumes:
      - name: certificates
        hostPath:
          path: /home/vagrant/bin/certificates
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: armour
  labels:
    app: reviews
    service: reviews
spec:
  type: NodePort
  externalIPs:
    - 172.42.42.102
  ports:
  - port: 9080
    name: http
  - name: armour-1
    port: 32002
    nodePort: 32002
  - name: armour-2
    port: 32003
    nodePort: 32003
  - name: armour-3
    port: 32004
    nodePort: 32004
  selector:
    app: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  namespace: armour
  labels:
    account: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  namespace: armour
  labels:
    app: reviews
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
    spec:
      initContainers:
      - name: armour-init
        image: armour-init
        imagePullPolicy: Never
        tty: true
        command: ["/bin/bash", "./iptables.sh"]
        env:
          - name: INGRESS
            value: "6000"
          - name: EGRESS
            value: "6000"
          - name: APP
            value: "9080"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsUser: 0
      serviceAccountName: bookinfo-reviews
      containers:
      - name: armour
        image: armour-proxy
        imagePullPolicy: Never
        tty: true
        env:
          - name: ARMOUR_PASS
            value: password
        command: ["/bin/bash", "-c"]
        args: ["./script.sh reviews1 & ./armour-host --label reviews1-host -c 172.42.42.101:8088 -u 172.42.42.102:32002 -p 32002 --run cp"]
        securityContext:
          runAsUser: 1337
        ports:
        - containerPort: 6000
        volumeMounts:
          - mountPath: /home/armour/certificates
            name: certificates
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v1:1.16.2
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: certificates
        hostPath:
          path: /home/vagrant/bin/certificates
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  namespace: armour
  labels:
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
  template:
    metadata:
      labels:
        app: reviews
        version: v2
    spec:
      initContainers:
      - name: armour-init
        image: armour-init
        imagePullPolicy: Never
        tty: true
        command: ["/bin/bash", "./iptables.sh"]
        env:
          - name: INGRESS
            value: "6000"
          - name: EGRESS
            value: "6000"
          - name: APP
            value: "9080"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsUser: 0
      serviceAccountName: bookinfo-reviews
      containers:
      - name: armour
        image: armour-proxy
        imagePullPolicy: Never
        tty: true
        env:
          - name: ARMOUR_PASS
            value: password
        command: ["/bin/bash", "-c"]
        args: ["./script.sh reviews2 & ./armour-host --label reviews2-host -c 172.42.42.101:8088 -u 172.42.42.102:32003 -p 32003 --run cp"]
        securityContext:
          runAsUser: 1337
        ports:
        - containerPort: 6000
        volumeMounts:
          - mountPath: /home/armour/certificates
            name: certificates
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v2:1.16.2
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: certificates
        hostPath:
          path: /home/vagrant/bin/certificates
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  namespace: armour
  labels:
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v3
  template:
    metadata:
      labels:
        app: reviews
        version: v3
    spec:
      initContainers:
      - name: armour-init
        image: armour-init
        imagePullPolicy: Never
        tty: true
        command: ["/bin/bash", "./iptables.sh"]
        env:
          - name: INGRESS
            value: "6000"
          - name: EGRESS
            value: "6000"
          - name: APP
            value: "9080"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsUser: 0
      serviceAccountName: bookinfo-reviews
      containers:
      - name: armour
        image: armour-proxy
        imagePullPolicy: Never
        tty: true
        env:
          - name: ARMOUR_PASS
            value: password
        command: ["/bin/bash", "-c"]
        args: ["./script.sh reviews3 & ./armour-host --label reviews3-host -c 172.42.42.101:8088 -u 172.42.42.102:32004 -p 32004 --run cp"]
        securityContext:
          runAsUser: 1337
        ports:
        - containerPort: 6000
        volumeMounts:
          - mountPath: /home/armour/certificates
            name: certificates
      - name: reviews
        image: docker.io/istio/examples-bookinfo-reviews-v3:1.16.2
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: certificates
        hostPath:
          path: /home/vagrant/bin/certificates
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  namespace: armour
  labels:
    app: productpage
    service: productpage
spec:
  type: NodePort
  externalIPs:
    - 172.42.42.102
  ports:
  - port: 9080
    name: http
  - name: armour
    port: 32005
    nodePort: 32005
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  namespace: armour
  labels:
    account: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  namespace: armour
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: v1
  template:
    metadata:
      labels:
        app: productpage
        version: v1
    spec:
      initContainers:
      - name: armour-init
        image: armour-init
        imagePullPolicy: Never
        tty: true
        command: ["/bin/bash", "./iptables.sh"]
        env:
          - name: INGRESS
            value: "6000"
          - name: EGRESS
            value: "6000"
          - name: APP
            value: "9080"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsUser: 0
      serviceAccountName: bookinfo-productpage
      containers:
      - name: armour
        image: armour-proxy
        imagePullPolicy: Never
        tty: true
        env:
          - name: ARMOUR_PASS
            value: password
        command: ["/bin/bash", "-c"]
        args: ["./script.sh productpage & ./armour-host --label productpage-host -c 172.42.42.101:8088 -u 172.42.42.102:32005 -p 32005 --run cp"]
        securityContext:
          runAsUser: 1337
        ports:
        - containerPort: 6000
        volumeMounts:
          - mountPath: /home/armour/certificates
            name: certificates
      - name: productpage
        image: docker.io/istio/examples-bookinfo-productpage-v1:1.16.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      - name: certificates
        hostPath:
          path: /home/vagrant/bin/certificates
---