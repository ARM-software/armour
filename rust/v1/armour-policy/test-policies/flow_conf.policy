external logger @ "log_sock" {
  fn log(_) -> ()
}

// REST request allow/deny
fn allow_rest_request(req: HttpRequest) -> bool {
  // logger::log(req);
  let date = if let Some(date) = req.unique_header("date") {
     str::from_utf8(date)
  } else {
     "-"
  };
  flow(req)
}


//information flow Labels
fn label(from: ID) -> str {
  if let Some(frid) = list::reduce(from.hosts()) {
    if frid.matches_with(Regex("server-1" | "server-3")) {
        "secret"
    } else {
        "public"
    }
  } else {
    "public"
  }
}

//confidentiality, can't read from secret, can't store secret in public
fn flow(req: HttpRequest) -> bool {
  let method = req.method();
  let (from, to) = req.connection().from_to();
  let to_label = to.label();
  method == "GET" && to_label == "public" ||
  method == "POST" &&  (from.label() != "secret" || to_label == "secret")
}
