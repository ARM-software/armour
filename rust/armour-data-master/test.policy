external logger @ "../arm-logger/log_sock" {
  fn log(_) -> ()
}

fn ips(req: HttpRequest, name: str) -> List<(str, List<Ipv4Addr>, i64)> {
  if let Some(hosts) = req.header(name) {
    filter_map host in hosts {
      if str::from_utf8(host) matches [name] ":" [port as i64] {
        if let Some(ips) = Ipv4Addr::lookup(name) {
          Some((name, ips, port))
        } else {
          None
        }
      } else {
        None
      }
    }
  } else {
    []
  }
}

fn require(req: HttpRequest, peer_addr: (Ipv4Addr, i64)) -> bool {
  logger::log(req);
  for x in ips(req, "x-forwarded-host") {
     logger::log("x-forwarded-host", x)
  };
  for x in ips(req, "host") {
     logger::log("host", x, "peer_addr", peer_addr)
  };
  req.route() == ["a"]
}

fn client_payload(payload: data) -> bool {
  payload.len() < 10
}

fn server_payload(payload: data) -> bool {
  4 < payload.len()
}
