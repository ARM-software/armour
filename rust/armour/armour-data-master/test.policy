external logger @ "log_sock" {
  fn log(_) -> ()
  fn connection(str, str, str, ID, ID) -> ()
  fn tcp_connection(ID, ID) -> ()
}

// REST request allow/deny
fn require(req: HttpRequest, from: ID, to: ID) -> bool {
  // logger::log(req);
  let date = if let Some(date) = req.unique_header("date") {
     str::from_utf8(date)
  } else {
     "-"
  };
  logger::connection(date, req.method(), req.path(), from, to);
  true
}

// REST client payload allow/deny
//fn client_payload(payload: data, from: ID, to: ID) -> bool {
//  logger::log("client payload", payload);
//  payload.len() < 10
//}

// REST server payload allow/deny
//fn server_payload(payload: data, from: ID, to: ID) -> bool {
//  logger::log("server payload", payload);
//  4 < payload.len()
//}

// TCP connection/deny
fn allow_connection(from: ID, to: ID) -> bool {
  logger::tcp_connection(from, to);
  true
}
