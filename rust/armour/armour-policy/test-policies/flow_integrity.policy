external logger @ "log_sock" {
  fn log(_) -> ()
}

// REST request allow/deny
fn allow_rest_request(req: HttpRequest) -> bool {
  // logger::log(req);
  let date = if let Some(date) = req.unique_header("date") {
     str::from_utf8(date)
  } else {
     "-"
  };
  flow(req.connection())
}

//information flow Labels
fn label(from: ID) -> str {
  if let Some(frid) = list::reduce(from.hosts()) {
    if frid.matches_with(Regex("server-1" | "server-3")) {
        "trusted"
    } else {
        "untrusted"
    }
  } else {
    "untrusted"
  }
}

//integrity, can't store in a trusted container
fn flow(c: Connection) -> bool {
  let (from, to) = c.from_to();
  label(from) == "trusted" || label(to) == "untrusted"
}
